# 2025-04-27

services:
  db:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    shm_size: '2g'
    ports:
      - ${POSTGRES_PORT}:5432
    expose:
      - 5432
    volumes:
      - ./volumes/postgres/pgdata:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=targcontrol_lite
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - targcontrol-docker-networks

  s3:
    image: minio/minio
    restart: always
    command: server --address s3:8000 /data
    expose:
      - 8000
    volumes:
      - ./volumes/s3/data:/data
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
    networks:
      - targcontrol-docker-networks

  frontend:
    image: targcontrol/targcontrol-local-frontend:${TAG}
    restart: always
    depends_on:
      - backend
      - api
    ports:
      - 3000:80
    expose:
      - 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx_logs:/var/log/nginx
    networks:
      - targcontrol-docker-networks

  backend:
    image: targcontrol/targcontrol-local-backend:${TAG}
    restart: always
    depends_on:
      - db
      - s3
    expose:
      - 5555
    volumes:
      - ./logs:/logs
    environment:
      - JAVA_OPTS=-Xmx${APP_MEMORY}M
      - APP_VERSION=${TAG}
      - APP_URL=${APP_URL}
      - MAIL_APP_URL=${APP_URL}

      - DB_URL=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}

      - LOG_PATH=/logs/

      - S3_URL=${S3_URL}
      - S3_BACKUP_ENABLED=false
      - S3_REGION=${S3_REGION}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}

      - TELEGRAM_ENABLED=${TELEGRAM_ENABLED}
      - TELEGRAM_USERNAME=${TELEGRAM_USERNAME}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    networks:
      - targcontrol-docker-networks

  api:
    image: swaggerapi/swagger-ui
    restart: always
    depends_on:
      - backend
    expose:
      - 8080
    volumes:
      - ./${API_FILE}:/app/swagger.json
    environment:
      - BASE_URL=/swagger
    networks:
      - targcontrol-docker-networks

networks:
  targcontrol-docker-networks:
    driver: bridge
